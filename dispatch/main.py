import os
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import logging

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
menu_keyboard.add(KeyboardButton("üìÅ –ë–∞–∑–∞"))
menu_keyboard.add(KeyboardButton("‚úâÔ∏è –¢–µ–∫—Å—Ç"))
menu_keyboard.add(KeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞"))

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
contacts = []
message_text = ""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("üëã –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!", reply_markup=menu_keyboard)

@dp.message_handler(content_types=types.ContentType.DOCUMENT)
async def handle_document(message: types.Document):
    file_id = message.document.file_id
    file = await bot.get_file(file_id)
    await file.download(destination_file="contacts.xlsx")
    contacts.append("contacts.xlsx")  # –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä, –Ω—É–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å —Ñ–∞–π–ª
    await message.answer("‚úÖ –ë–∞–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")

@dp.message_handler(lambda msg: msg.text == "‚úâÔ∏è –¢–µ–∫—Å—Ç")
async def set_text(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")
    
    @dp.message_handler()
    async def save_text(msg: types.Message):
        global message_text
        message_text = msg.text
        await msg.answer("‚úÖ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")

@dp.message_handler(lambda msg: msg.text == "üì¢ –†–∞—Å—Å—ã–ª–∫–∞")
async def start_mailing(message: types.Message):
    if not contacts or not message_text:
        await message.answer("‚ùå –ù–µ—Ç –±–∞–∑—ã –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞!")
        return
    
    await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞... (—ç—Ç–æ —Ç–µ—Å—Ç, —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è)")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
